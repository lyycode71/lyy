class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> res=new ArrayList<List<Integer>>();
        if(root==null){
            return res;
        }
        Queue<Node> qu=new LinkedList<>();        
        qu.add(root);
        while(!qu.isEmpty()){
            List<Integer> li=new ArrayList<>();
            int n=qu.size();           
            while(n>0){
                n--;
                Node cur=qu.poll();
                li.add(cur.val);
                for(Node c:cur.children){
                    qu.add(c);
                }
               
            }
            res.add(li);
            
        }
        return res;
    }
}
