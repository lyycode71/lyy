int GetMineCount(char mine[Rows][Cols], int x, int y)
{
 return mine[x - 1][y] +
		mine[x - 1][y - 1] +
		mine[x][y - 1] +
		mine[x + 1][y - 1] +
		mine[x + 1][y] +
		mine[x + 1][y + 1] +
		mine[x][y + 1] +
		mine[x - 1][y + 1] - 8 * '0';
}
void Expand(char mine[Rows][Cols],char show[Rows][Cols], int row, int col,int *num)
{
	int x = 0, y = 0;
	if (show[row][col] == '*')
	{
		(*num)++;
		int count = GetMineCount(mine, row, col);
		if (count != 0)
		{
			show[row][col] = count + '0';
		}
		else
		{
			show[row][col] = '0';
			for (x = -1; x <= 1; x++)
			{
				for (y = -1; y <= 1; y++)
				{
					if (row + x >= 1 && row + x <= Row&&col + y >= 1 && col + y <= Col)
					{
						if (x!=0||y!=0)
						Expand(mine, show, row + x, col + y,num);
					}
				}
			}
		}
	}
}
