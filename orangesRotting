class Solution {
    static int[][] next={{0,1},{1,0},{0,-1},{-1,0}};
    public int orangesRotting(int[][] grid) {
        int n=grid.length;
        int m=grid[0].length;
        Queue<Integer> qu=new LinkedList<>();
        Map<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==2){
                    int num=i*m+j;
                    qu.add(num);
                    map.put(num,0);
                }
            }
        }
        int res=0;
        while(!qu.isEmpty()){
            int num=qu.poll();
            int r=num/m,c=num%m;
            for(int k=0;k<4;k++){
                int nr=r+next[k][0];
                int nc=c+next[k][1];
                if(0<=nr&&nr<n&&0<=nc&&nc<m&&grid[nr][nc]==1){
                    grid[nr][nc]=2;
                    int nums=nr*m+nc;
                    qu.add(nums);
                    map.put(nums,map.get(num)+1);
                    res=map.get(nums);
                }
            }
        }
       
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1){
                    return -1;
                }
            }
        }
         return res;
    }
}
