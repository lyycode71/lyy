class Solution {
    static int[][] next={{0,1},{1,0},{0,-1},{-1,0}};
    public void dfs(int[][] image,int row,int col,int[][] book, int sr, int sc,int oldColor, int newColor){
        image[sr][sc]=newColor;
        book[sr][sc]=1;//防止重复判断做标记
        for(int i=0;i<4;i++){
            int nsr=sr+next[i][0];
            int nsc=sc+next[i][1];
            if(nsr>=row||nsr<0||nsc>=col||nsc<0){//越界判断
                continue;
            }
            if(image[nsr][nsc]==oldColor&&book[nsr][nsc]==0){
                dfs(image,row,col,book,nsr,nsc,oldColor,newColor);
            }
        }
    }
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        
        int n=image.length;
        int m=image[0].length;
        int[][] book=new int[n][m];
        int oldColor=image[sr][sc];
        dfs(image,n,m,book,sr,sc,oldColor,newColor);
        return image;
    }
}
