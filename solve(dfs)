class Solution {
    public void solve(char[][] board) {
        int m=board.length;
        if(board==null||m==0){
            return;
        }
        int n=board[0].length;
        //查看边上连接区域，其不用改变
        for(int i=0;i<m;i++){
            dfs(board,i,0,m,n);
            dfs(board,i,n-1,m,n);
        }
        for(int i=1;i<n;i++){
            dfs(board,0,i,m,n);
            dfs(board,m-1,i,m,n);
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]=='O')//内部的直接可以改掉
                    board[i][j]='X';
                if(board[i][j]=='c')
                    board[i][j]='O';
            }
        }
    }
    public void dfs(char[][] board,int i,int j,int m,int n){
        if(i<0||j<0||i>=m||j>=n||board[i][j]!='O'){
            return;
        }
        board[i][j]='c';//做标记
        dfs(board,i-1,j,m,n);
        dfs(board,i+1,j,m,n);
        dfs(board,i,j-1,m,n);
        dfs(board,i,j+1,m,n);
        return;
    }
}
