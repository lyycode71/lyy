/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        if(head==null)return null;
        else if(head.next==null)return new TreeNode(head.val);
        ListNode cur=head;
        ListNode q=cur.next.next;
        while(q!=null&&q.next!=null){//找到中间结点即此次的根
            cur=cur.next;            
            q=q.next.next;
        }
        ListNode p=cur.next;//标记右子树起始结点
        cur.next=null;//进行分割
        TreeNode root=new TreeNode(p.val);
        root.left=sortedListToBST(head);
        root.right=sortedListToBST(p.next);
        return root;
    }
}
